/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pro1p1_diegomaradiaga;

import javax.swing.JOptionPane;
import java.util.Random;

public class OpcionRecursion extends javax.swing.JFrame {
    static Random aleatorio = new Random();
    /**
     * Creates new form OpcionRecursion
     */
    public OpcionRecursion() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        Fondo = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(78, 71, 115));
        jPanel1.setPreferredSize(new java.awt.Dimension(262, 466));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(35, 29, 44));
        jButton1.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Convertidor  Binario");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 140, 30));

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/programacion.png"))); // NOI18N
        jLabel1.setText("  Recursión");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabel1.setPreferredSize(new java.awt.Dimension(105, 32));
        jLabel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jLabel1ComponentHidden(evt);
            }
        });
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 140, -1));

        jButton2.setBackground(new java.awt.Color(35, 29, 44));
        jButton2.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Multiplicador Matricial");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 140, 30));

        jButton3.setBackground(new java.awt.Color(35, 29, 44));
        jButton3.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("MENÚ");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 140, 30));

        Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Binario.png"))); // NOI18N
        jPanel1.add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, -1, 310));

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 220, 10));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabel1ComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1ComponentHidden

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       Menu M = new Menu();
       M.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int opcion;
        do{
            opcion = Integer.parseInt(JOptionPane.showInputDialog(this, ""
                + ">>>>>CONVERSIONES<<<<<"
                + "\n"
                + "\n"
                + "1) Binario a Decimal\n"
                + "2) Decimal a Binario\n"
                + "3) Regresar al Menu \n"));
        switch (opcion){
            case 1:
                String numB = JOptionPane.showInputDialog(this, "Ingrese un numero binario: ");
                
                JOptionPane.showMessageDialog(this, "El numero "+numB+" en binario es: "+BaD(numB));
                break;
            case 2:
                int numD = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese un numero decimal: "));
                
                JOptionPane.showMessageDialog(this, "El numero "+numD+" en binario es: "+DaB(numD));
                break;
            case 3:
                this.setVisible(true);
                break;
        }
        
        }while(opcion ==1 || opcion == 2);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    int FM1 = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese las filas de la matriz 1: "));
    int CM1 = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese las columnas de la matriz 1: "));
    int [][] M1 = lectura(FM1,CM1);
    
    int FM2 = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese las filas de la matriz 2: "));
    int CM2 = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese las columnas de la matriz 2: "));
    int [][] M2 = lectura(FM2,CM2);
    
    while (CM1!=FM2){
        JOptionPane.showMessageDialog(null, "El número de columnas de la primera matriz deber ser el mismo número de filas de la segunda matriz ", "Advertencia", HEIGHT);
        FM1 = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese las filas de la matriz 1: "));
        CM1 = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese las columnas de la matriz 1: "));
        M1 = lectura(FM1,CM1);
        
        FM2 = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese las filas de la matriz 2: "));
        CM2 = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese las columnas de la matriz 2: "));
        M2 = lectura(FM2,CM2);
    }
    
    JOptionPane.showMessageDialog(null, " "
            + "Matriz A \n"
            + "\n"
            + ""+imprimir(M1)
            + "\n"
            + "Matriz B \n"
            + "\n"
            + ""+imprimir(M2)
            + "\n"
            + "Producto \n"
            + "\n"
            + ""+imprimir(Producto(M1,M2,FM1,CM2))); 
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OpcionRecursion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OpcionRecursion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OpcionRecursion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OpcionRecursion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OpcionRecursion().setVisible(true);
            }
        });
    }
    
    public long DaB (int num){
        if(num<2) return num;
        else return num%2+ DaB(num/2)*10;
    }
    
    public static int BaD(String binary) {
        return Conversor(binary, 0, 0);
    }
    
    public static int Conversor(String binary, int number, int power) {
        int digit;
        if (binary.length() != 0) {
            if (binary.charAt(binary.length() - 1) == '0') {
                digit = 0;
            } else {
                digit = 1;
            }
            if (digit == 1) {
                number += (int) Math.pow(2, power);
            } else {
                number = 0;
            }
            return Conversor(binary.substring(0, binary.length() - 1), number, power + 1);
        }

        return number;
    }
    
    public static int [][] lectura (int filas, int columnas){
        int temporal [][] = new int [filas][columnas];
        
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                temporal [i][j] = 1+ aleatorio.nextInt(9);
            }
        }
        return temporal;
    }//Fin metodo lectura
     
    public static String imprimir(int[][] Matriz) {
        String cadena = "";

        for (int i = 0; i < Matriz.length; i++) {
            for (int j = 0; j < Matriz[i].length; j++) {
                cadena += "["+Matriz[i][j]+"]" + " ";
            }
            cadena += "\n";
        }
        return cadena;
    }//Fin metodo imprimir
    
    
    public static int [][] Producto (int [][]MatrizA,int [][]MatrizB, int filas, int columnas){
        int[][] Producto = new int[filas][columnas];
        
        
        
        for (int i = 0; i < MatrizA.length; i++) {
            for (int j = 0; j < MatrizB[0].length; j++) {
                for (int k = 0; k < MatrizA[0].length; k++) {
                     Producto[i][j] += MatrizA[i][k] * MatrizB[k][j];
            }
        }
    }
        return Producto;
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Fondo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
